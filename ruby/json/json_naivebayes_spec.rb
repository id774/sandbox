#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

$:.unshift File.join(File.dirname(__FILE__))

require 'rubygems'
require 'rspec'
require 'stdout'
require 'json_naivebayes'

describe Analyzer do
  context 'の train メソッドにおいて' do
    describe 'クラスにファイル名を引数として与えると' do
      it 'クラスとその素性が出力される' do
        analyzer = Analyzer.new( ['train.txt'] )
        result = Stdout::Output.capture { analyzer.train }
        expected = [
          "1\t要望未達\t{\"調整\"=>1, \"機能\"=>1, \"点\"=>1, \"為\"=>1, \"希望\"=>1, \"期間\"=>1, \"提案\"=>1}\n",
          "2\t要員不在\t{\"適任\"=>1, \"者\"=>1, \"不在\"=>1, \"謝絶\"=>1}\n",
          "8\t要員不在\t{\"適任者不在の謝絶\"=>1, \"ため謝絶\"=>1}\n",
          "1\t要員不在\t{\"適任者できず謝絶\"=>1, \"できず謝絶\"=>1, \"謝絶\"=>1}\n",
          "5\t要員不在\t{\"要員\"=>1, \"手配\"=>1, \"謝絶\"=>1}\n",
          "5\t要員不在\t{\"要員手配できず謝絶\"=>1, \"できず謝絶\"=>1, \"謝絶\"=>1}\n",
          "6\t要望未達\t{\"年\"=>2, \"後\"=>2, \"提案\"=>2, \"期待\"=>1, \"将来\"=>1}\n",
          "0\t要望未達\t{\"SW\"=>1, \"包括\"=>1, \"契約\"=>1, \"差\"=>1, \"BCP\"=>1, \"考え\"=>1, \"幅\"=>1, \"敗因\"=>1}\n",
          "9\t価格\t{\"金額\"=>1}\n",
          "9\t価格\t{\"金額\"=>1}\n",
          "3\t経験値\t{\"他社\"=>1, \"提案\"=>1, \"選任\"=>1, \"経験\"=>1, \"豊富\"=>1}\n",
          "6\t価格\t{\"本件\"=>1, \"要員\"=>1, \"募集\"=>1, \"他社\"=>1, \"収束\"=>1, \"今後\"=>1, \"当社\"=>1, \"状況\"=>1, \"等々\"=>1, \"説明\"=>1, \"顧客\"=>1, \"話\"=>2, \"何\"=>1, \"際\"=>1, \"報告\"=>1}\n",
          "7\t顧客都合\t{\"顧客\"=>1, \"内\"=>1, \"製\"=>1, \"対応\"=>1}\n",
          "7\t顧客都合\t{\"顧客内製にて対応\"=>1, \"対応\"=>1}\n",
          "5\t顧客都合\t{\"案件\"=>1, \"消滅\"=>1}\n",
          "5\t顧客都合\t{\"案件消滅\"=>1}\n",
          "3\t顧客都合\t{\"移行\"=>1, \"構築\"=>1, \"価格\"=>2, \"面\"=>1, \"社内\"=>1, \"有効\"=>1, \"利用\"=>1, \"決定\"=>2, \"運用\"=>1, \"ReSM\"=>1, \"地元\"=>1, \"内容\"=>1, \"差\"=>1, \"何\"=>1, \"際\"=>1, \"等\"=>1, \"点\"=>1, \"考慮\"=>1, \"結果\"=>1}\n",
          "8\t提案不足\t{\"後日\"=>1, \"直接\"=>1, \"担当\"=>6, \"者\"=>8, \"様\"=>3, \"挨拶\"=>1, \"本件\"=>2, \"お話\"=>2, \"伺い\"=>1, \"予定\"=>1, \"電話\"=>1, \"度\"=>1, \"済み\"=>1, \"下記\"=>1, \"要因\"=>1, \"失\"=>1, \"注\"=>1, \"社内\"=>1, \"管理\"=>2, \"現場\"=>4, \"間\"=>1, \"考え\"=>1, \"差\"=>1, \"双方\"=>1, \"意識\"=>1, \"摺\"=>1, \"合せ\"=>1, \"大変\"=>3, \"状況\"=>1, \"手助け\"=>1, \"作業\"=>1, \"人\"=>3, \"投入\"=>3, \"負荷\"=>2, \"分散\"=>1, \"思い\"=>2, \"逆\"=>1, \"教育\"=>1, \"初回\"=>1, \"単純\"=>1, \"要員\"=>2, \"追加\"=>2, \"提案\"=>2, \"中心\"=>1, \"ReSM\"=>1, \"弊社\"=>1, \"展開\"=>1, \"内\"=>1, \"運用\"=>1, \"保守\"=>1, \"軽減\"=>1, \"本来\"=>1, \"業務\"=>1, \"従事\"=>1, \"先行\"=>1, \"形\"=>1, \"途中\"=>1, \"話\"=>1, \"完全\"=>1, \"糧\"=>1, \"次回\"=>1}\n",
          "9\tリスキー\t{\"個人\"=>1, \"情報\"=>1, \"提供\"=>1, \"必要\"=>1, \"拒絶\"=>1}\n",
          "4\tリスキー\t{\"将来\"=>1, \"体制\"=>1, \"増\"=>1, \"顧客\"=>1, \"側\"=>1, \"増員\"=>1, \"保障\"=>1}\n", "2\t価格\t{\"当該\"=>2, \"案件\"=>4, \"指定\"=>1, \"価格\"=>1, \"DHCP\"=>1, \"巻き\"=>1, \"取り\"=>1, \"注力\"=>1, \"辞退\"=>1}\n"
        ]
        result.length.should eql 21
        result.class.should eql Array
        result.should eq expected
      end
    end
  end

  context 'の classify メソッドにおいて' do
    describe 'クラスに教師データと分類対象のファイルを引数として与えると' do
      it 'クラスとその数値が出力される' do
        analyzer = Analyzer.new( ['train.txt', 'classify.txt'] )
        Stdout::Output.capture { analyzer.train }
        result = Stdout::Output.capture { analyzer.classify }
        expected = [
          "1111,activity,xxxx銀行センター運用\t情報収集,受注\t{\"要望未達\":0.86,\"要員不在\":0.61,\"価格\":66.66,\"経験値\":0.39,\"顧客都合\":27.68,\"提案不足\":1.06,\"リスキー\":2.74}\n",
          "2222,activity,yyyy銀行センター運用\t情報収集,失注\t{\"要望未達\":1.17,\"要員不在\":13.13,\"価格\":44.16,\"経験値\":0.27,\"顧客都合\":36.42,\"提案不足\":2.97,\"リスキー\":1.87}\n"
        ]
        result.length.should eql 2
        result.class.should eql Array
        result.should eq expected
      end
    end
  end
end
